# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04' # examples of other options: 'macOS-10.13', 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'

steps:
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber), $(System.ArtifactsDirectory), $(Build.ArtifactStagingDirectory)/$(buildConfiguration) " > buildinfo.txt'
  displayName: 'Info dir1: $(System.ArtifactsDirectory) - dir2: $(Build.ArtifactStagingDirectory)/$(buildConfiguration) '

#- task: AzureRmWebAppDeployment@3
#  displayName: 'Deploy  dir1: $(System.ArtifactsDirectory) - dir2: $(Build.ArtifactStagingDirectory)/$(buildConfiguration) '
#  inputs:
#    azureSubscription: '<Azure service connection>'
#    WebAppName: '<Name of web app>'
#    Package: $(System.ArtifactsDirectory)/**/*.zip    

